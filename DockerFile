
# FROM ubuntu:18.04
FROM balenalib/rpi-raspbian
# https://www.balena.io/docs/reference/base-images/base-images/

# FROM resin/rpi-raspbian:jessie

LABEL maintainer="o.akinde@tenderd.com"

WORKDIR /app

# RUN apt-get update && apt-get autoremove
RUN apt update && apt upgrade -y && apt autoremove

# RUN apt-get -y install build-essential checkinstall \
#                     cmake pkg-config yasm \
#                     git gfortran \
#                     libjpeg8-dev libjasper-dev libpng12-dev libjpeg-dev libgdk-pixbuf2.0-dev \
#                     libpango1.0-dev libcairo2-dev libtiff5-dev libtiff-dev \
#                     libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev \
#                     libxine2-dev libv4l-dev \
#                     libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev \
#                     libgtk2.0-dev qt5-default \
#                     libatlas-base-dev  wget \
#                     libmp3lame-dev libtheora-dev \
#                     libvorbis-dev libxvidcore-dev libx264-dev \
#                     libopencore-amrnb-dev libopencore-amrwb-dev \
#                     libavresample-dev x264 v4l-utils \
#                     libprotobuf-dev protobuf-compiler \
#                     libgoogle-glog-dev libgflags-dev \
#                     libgphoto2-dev libeigen3-dev libhdf5-dev doxygen \
#                     python3-dev python3-pip \
#         && pip3 install --upgrade pip \
#         && pip install --upgrade setuptools \
#         && pip3 install -U pip  numpy==1.16.2 scikit-learn==0.19.1 virtualenv tensorflow==1.14 python3-testresources

RUN apt install -y build-essential checkinstall libtiff5-dev libpng-dev \
                    cmake pkg-config yasm git gfortran wget unzip \
                    libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev \
                    libxine2-dev libv4l-dev \
                    libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
                    qt5-default \
                    libatlas-base-dev \
                    libmp3lame-dev\
                    libvorbis-dev libxvidcore-dev \
                    libopencore-amrnb-dev libopencore-amrwb-dev \
                    x264 x265 v4l-utils \
                    libprotobuf-dev protobuf-compiler libeigen3-dev \
                    python3-dev python3-pip \
        && pip3 install --upgrade \
        && pip install --upgrade setuptools \
        && pip3 install -U numpy==1.16.2 && pip3 install -U virtualenv && pip3 install -U tensorflow==1.14

# OpenCV Installation
RUN wget -O cv.zip https://github.com/opencv/opencv/archive/4.0.1.zip && \
                             wget -O contrib.zip && \
                            https://github.com/opencv/opencv_contrib/archive/4.0.1.zip && \
                            unzip cv.zip && \
                            unzip contrib.zip && \
                            cd opencv-4.0.1 && \
                            mkdir -p /build && \
                            WORKDIR /build

RUN cmake -D CMAKE_BUILD_TYPE=RELEASE \
  -D CMAKE_INSTALL_PREFIX=/usr/local \
  -D WITH_TBB=ON \
  -D WITH_V4L=ON \
  -D WITH_QT=ON \
  -D WITH_OPENGL=ON \
  -D BUILD_opencv_python3=TRUE \
  -D INSTALL_PYTHON_EXAMPLES=OFF \
  -D BUILD_NEW_PYTHON_SUPPORT=ON \
  -D WITH_CUDA=ON \
  -D WITH_NVCUVID=OFF \
  -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.0.1/modules \
  -D OPENCV_ENABLE_NONFREE=ON \
  .. \ 
  make -j 4 \
  make install \
  ldconfig \
  ln -s /usr/local/lib/python3.6/dist-packages/cv2/python-3.6/cv2.cpython-36m-x86_64-linux-gnu.so /usr/local/lib/python3.6/dist-packages/cv2/python-3.6/cv2.so